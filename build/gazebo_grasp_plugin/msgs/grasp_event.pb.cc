// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: grasp_event.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "grasp_event.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace gazebo {
namespace msgs {

namespace {

const ::google::protobuf::Descriptor* GraspEvent_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GraspEvent_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_grasp_5fevent_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_grasp_5fevent_2eproto() {
  protobuf_AddDesc_grasp_5fevent_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "grasp_event.proto");
  GOOGLE_CHECK(file != NULL);
  GraspEvent_descriptor_ = file->message_type(0);
  static const int GraspEvent_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GraspEvent, arm_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GraspEvent, object_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GraspEvent, attached_),
  };
  GraspEvent_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GraspEvent_descriptor_,
      GraspEvent::default_instance_,
      GraspEvent_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GraspEvent, _has_bits_[0]),
      -1,
      -1,
      sizeof(GraspEvent),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GraspEvent, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_grasp_5fevent_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GraspEvent_descriptor_, &GraspEvent::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_grasp_5fevent_2eproto() {
  delete GraspEvent::default_instance_;
  delete GraspEvent_reflection_;
}

void protobuf_AddDesc_grasp_5fevent_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_grasp_5fevent_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\021grasp_event.proto\022\013gazebo.msgs\";\n\nGras"
    "pEvent\022\013\n\003arm\030\001 \002(\t\022\016\n\006object\030\002 \002(\t\022\020\n\010a"
    "ttached\030\003 \002(\010", 93);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "grasp_event.proto", &protobuf_RegisterTypes);
  GraspEvent::default_instance_ = new GraspEvent();
  GraspEvent::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_grasp_5fevent_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_grasp_5fevent_2eproto {
  StaticDescriptorInitializer_grasp_5fevent_2eproto() {
    protobuf_AddDesc_grasp_5fevent_2eproto();
  }
} static_descriptor_initializer_grasp_5fevent_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GraspEvent::kArmFieldNumber;
const int GraspEvent::kObjectFieldNumber;
const int GraspEvent::kAttachedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GraspEvent::GraspEvent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:gazebo.msgs.GraspEvent)
}

void GraspEvent::InitAsDefaultInstance() {
}

GraspEvent::GraspEvent(const GraspEvent& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:gazebo.msgs.GraspEvent)
}

void GraspEvent::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  arm_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  object_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  attached_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GraspEvent::~GraspEvent() {
  // @@protoc_insertion_point(destructor:gazebo.msgs.GraspEvent)
  SharedDtor();
}

void GraspEvent::SharedDtor() {
  arm_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  object_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void GraspEvent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GraspEvent::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GraspEvent_descriptor_;
}

const GraspEvent& GraspEvent::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_grasp_5fevent_2eproto();
  return *default_instance_;
}

GraspEvent* GraspEvent::default_instance_ = NULL;

GraspEvent* GraspEvent::New(::google::protobuf::Arena* arena) const {
  GraspEvent* n = new GraspEvent;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GraspEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:gazebo.msgs.GraspEvent)
  if (_has_bits_[0 / 32] & 7u) {
    if (has_arm()) {
      arm_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_object()) {
      object_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    attached_ = false;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool GraspEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gazebo.msgs.GraspEvent)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string arm = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_arm()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->arm().data(), this->arm().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "gazebo.msgs.GraspEvent.arm");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_object;
        break;
      }

      // required string object = 2;
      case 2: {
        if (tag == 18) {
         parse_object:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_object()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->object().data(), this->object().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "gazebo.msgs.GraspEvent.object");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_attached;
        break;
      }

      // required bool attached = 3;
      case 3: {
        if (tag == 24) {
         parse_attached:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &attached_)));
          set_has_attached();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gazebo.msgs.GraspEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gazebo.msgs.GraspEvent)
  return false;
#undef DO_
}

void GraspEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gazebo.msgs.GraspEvent)
  // required string arm = 1;
  if (has_arm()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->arm().data(), this->arm().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "gazebo.msgs.GraspEvent.arm");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->arm(), output);
  }

  // required string object = 2;
  if (has_object()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->object().data(), this->object().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "gazebo.msgs.GraspEvent.object");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->object(), output);
  }

  // required bool attached = 3;
  if (has_attached()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->attached(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:gazebo.msgs.GraspEvent)
}

::google::protobuf::uint8* GraspEvent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gazebo.msgs.GraspEvent)
  // required string arm = 1;
  if (has_arm()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->arm().data(), this->arm().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "gazebo.msgs.GraspEvent.arm");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->arm(), target);
  }

  // required string object = 2;
  if (has_object()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->object().data(), this->object().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "gazebo.msgs.GraspEvent.object");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->object(), target);
  }

  // required bool attached = 3;
  if (has_attached()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->attached(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gazebo.msgs.GraspEvent)
  return target;
}

int GraspEvent::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:gazebo.msgs.GraspEvent)
  int total_size = 0;

  if (has_arm()) {
    // required string arm = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->arm());
  }

  if (has_object()) {
    // required string object = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->object());
  }

  if (has_attached()) {
    // required bool attached = 3;
    total_size += 1 + 1;
  }

  return total_size;
}
int GraspEvent::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:gazebo.msgs.GraspEvent)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string arm = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->arm());

    // required string object = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->object());

    // required bool attached = 3;
    total_size += 1 + 1;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GraspEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gazebo.msgs.GraspEvent)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const GraspEvent* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GraspEvent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gazebo.msgs.GraspEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gazebo.msgs.GraspEvent)
    MergeFrom(*source);
  }
}

void GraspEvent::MergeFrom(const GraspEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gazebo.msgs.GraspEvent)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_arm()) {
      set_has_arm();
      arm_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.arm_);
    }
    if (from.has_object()) {
      set_has_object();
      object_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.object_);
    }
    if (from.has_attached()) {
      set_attached(from.attached());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void GraspEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gazebo.msgs.GraspEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GraspEvent::CopyFrom(const GraspEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gazebo.msgs.GraspEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GraspEvent::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void GraspEvent::Swap(GraspEvent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GraspEvent::InternalSwap(GraspEvent* other) {
  arm_.Swap(&other->arm_);
  object_.Swap(&other->object_);
  std::swap(attached_, other->attached_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GraspEvent::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GraspEvent_descriptor_;
  metadata.reflection = GraspEvent_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GraspEvent

// required string arm = 1;
bool GraspEvent::has_arm() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GraspEvent::set_has_arm() {
  _has_bits_[0] |= 0x00000001u;
}
void GraspEvent::clear_has_arm() {
  _has_bits_[0] &= ~0x00000001u;
}
void GraspEvent::clear_arm() {
  arm_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_arm();
}
 const ::std::string& GraspEvent::arm() const {
  // @@protoc_insertion_point(field_get:gazebo.msgs.GraspEvent.arm)
  return arm_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GraspEvent::set_arm(const ::std::string& value) {
  set_has_arm();
  arm_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gazebo.msgs.GraspEvent.arm)
}
 void GraspEvent::set_arm(const char* value) {
  set_has_arm();
  arm_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gazebo.msgs.GraspEvent.arm)
}
 void GraspEvent::set_arm(const char* value, size_t size) {
  set_has_arm();
  arm_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gazebo.msgs.GraspEvent.arm)
}
 ::std::string* GraspEvent::mutable_arm() {
  set_has_arm();
  // @@protoc_insertion_point(field_mutable:gazebo.msgs.GraspEvent.arm)
  return arm_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GraspEvent::release_arm() {
  // @@protoc_insertion_point(field_release:gazebo.msgs.GraspEvent.arm)
  clear_has_arm();
  return arm_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GraspEvent::set_allocated_arm(::std::string* arm) {
  if (arm != NULL) {
    set_has_arm();
  } else {
    clear_has_arm();
  }
  arm_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arm);
  // @@protoc_insertion_point(field_set_allocated:gazebo.msgs.GraspEvent.arm)
}

// required string object = 2;
bool GraspEvent::has_object() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void GraspEvent::set_has_object() {
  _has_bits_[0] |= 0x00000002u;
}
void GraspEvent::clear_has_object() {
  _has_bits_[0] &= ~0x00000002u;
}
void GraspEvent::clear_object() {
  object_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_object();
}
 const ::std::string& GraspEvent::object() const {
  // @@protoc_insertion_point(field_get:gazebo.msgs.GraspEvent.object)
  return object_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GraspEvent::set_object(const ::std::string& value) {
  set_has_object();
  object_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gazebo.msgs.GraspEvent.object)
}
 void GraspEvent::set_object(const char* value) {
  set_has_object();
  object_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gazebo.msgs.GraspEvent.object)
}
 void GraspEvent::set_object(const char* value, size_t size) {
  set_has_object();
  object_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gazebo.msgs.GraspEvent.object)
}
 ::std::string* GraspEvent::mutable_object() {
  set_has_object();
  // @@protoc_insertion_point(field_mutable:gazebo.msgs.GraspEvent.object)
  return object_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GraspEvent::release_object() {
  // @@protoc_insertion_point(field_release:gazebo.msgs.GraspEvent.object)
  clear_has_object();
  return object_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GraspEvent::set_allocated_object(::std::string* object) {
  if (object != NULL) {
    set_has_object();
  } else {
    clear_has_object();
  }
  object_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), object);
  // @@protoc_insertion_point(field_set_allocated:gazebo.msgs.GraspEvent.object)
}

// required bool attached = 3;
bool GraspEvent::has_attached() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void GraspEvent::set_has_attached() {
  _has_bits_[0] |= 0x00000004u;
}
void GraspEvent::clear_has_attached() {
  _has_bits_[0] &= ~0x00000004u;
}
void GraspEvent::clear_attached() {
  attached_ = false;
  clear_has_attached();
}
 bool GraspEvent::attached() const {
  // @@protoc_insertion_point(field_get:gazebo.msgs.GraspEvent.attached)
  return attached_;
}
 void GraspEvent::set_attached(bool value) {
  set_has_attached();
  attached_ = value;
  // @@protoc_insertion_point(field_set:gazebo.msgs.GraspEvent.attached)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace msgs
}  // namespace gazebo

// @@protoc_insertion_point(global_scope)
